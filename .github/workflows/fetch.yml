name: Fetch Bitcoin News

on:
  schedule:
    # Every 15 minutes
    - cron: '*/15 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repo
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # full history so we can push

      # 2Ô∏è‚É£ Set up Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: npm install xml2js node-fetch

      # 4Ô∏è‚É£ Set NEWSAPI_KEY (if used in script)
      - name: Set NEWSAPI_KEY
        if: ${{ secrets.NEWSAPI_KEY }}
        run: echo "NEWSAPI_KEY=${{ secrets.NEWSAPI_KEY }}" >> $GITHUB_ENV

      # 5Ô∏è‚É£ Fetch news
      - name: Fetch news
        run: node data/scripts/fetch_news.mjs

      # 6Ô∏è‚É£ Check if news.json changed
      - name: Check for changes
        id: git-check
        run: |
          git config user.name "GitHub Action"
          git config user.email "actions@github.com"
          git add data/news.json
          if git diff --cached --quiet; then
            echo "no-changes=true" >> $GITHUB_OUTPUT
          else
            echo "no-changes=false" >> $GITHUB_OUTPUT
          fi

      # 7Ô∏è‚É£ Log result
      - name: Log result
        run: |
          if [ "${{ steps.git-check.outputs.no-changes }}" = "true" ]; then
            echo "‚úÖ No new articles ‚Äî nothing to commit."
          else
            echo "üì∞ New articles found ‚Äî will commit and push."
          fi

      # 8Ô∏è‚É£ Commit and push only if new articles
      - name: Commit and push
        if: steps.git-check.outputs.no-changes == 'false'
        run: |
          git commit -m "Update news.json with latest articles [skip ci]"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
